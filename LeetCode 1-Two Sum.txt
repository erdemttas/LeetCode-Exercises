Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].

Example 2:
Input: nums = [3,2,4], target = 6
Output: [1,2]

Example 3:
Input: nums = [3,3], target = 6
Output: [0,1]


solution 1:
public class Solution {
    public int[] TwoSum(int[] nums, int target) { 
        int[] arr=new int[2];
    for (int i=0;i<nums.Length;i++)
    {
        for (int j=i+1;j<nums.Length;j++)
        {
            if(nums[i]+nums[j]==target)
            {
                arr[0]=i;
                arr[1]=j;
                return arr;
            }
        }
    }
   
        return arr;
        
    }
}










Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.



solution:
public class Solution {
    public bool IsPalindrome(int x) {
        if(x<0)
        {
            return false;
        }
          
        int temp=x;
        int tersi=0;
        
        while(temp!=0)
        {
            tersi=tersi*10;
            tersi+=temp%10;
            temp=temp/10;
        }

            if(tersi==x)
        {
            return true;
                
        }
        else
        {
            return false;
        }
    }
}






